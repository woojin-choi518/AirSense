generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["airsense"]
}

model LivestockFarm {
  id             Int     @id @default(autoincrement())
  farmName       String  @map("farm_name")
  livestockType  String  @map("livestock_type")
  landAddress    String  @map("land_address")
  roadAddress    String? @map("road_address")
  livestockCount Int     @map("livestock_count")
  barnCount      Int     @map("barn_count")
  areaSqm        Float   @map("area_sqm")
  latitude       Float?
  longitude      Float?

  @@map("LivestockFarm")
  @@schema("airsense")
}

model Complaint {
  id           Int      @id @default(autoincrement())
  receivedDate DateTime @map("received_date")
  content      String
  region       String?
  year         Int?
  timePeriod   String?  @map("time_period")
  latitude     Float?
  longitude    Float?
  roadAddress  String?  @map("road_address")
  landAddress  String?  @map("land_address")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([latitude, longitude])
  @@index([receivedDate])
  @@index([region])
  @@index([year])
  @@index([latitude, longitude, receivedDate])
  @@index([region, receivedDate])
  @@index([timePeriod, receivedDate])
  @@map("Complaint")
  @@schema("airsense")
}

// 새로운 민원 폼용 모델
model FeedbackComplaint {
  id          String   @id @default(cuid())
  contact     String?  // 연락처 (선택사항)
  coordinates String   // 좌표 (위도,경도)
  address     String   // 주소
  intensity   Int      // 강도 1-5
  content     String   // 민원 내용
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 관계: 민원과 카테고리의 다대다 관계
  categories  FeedbackComplaintCategory[]
  
  @@map("FeedbackComplaint")
  @@schema("airsense")
}

model FeedbackCategory {
  id          String   @id @default(cuid())
  name        String   @unique // 카테고리명
  isDefault   Boolean  @default(false) // 기본 표시 여부
  createdAt   DateTime @default(now())
  
  // 관계: 카테고리와 민원의 다대다 관계
  complaints  FeedbackComplaintCategory[]
  
  @@map("FeedbackCategory")
  @@schema("airsense")
}

// 중간 테이블 (다대다 관계를 위해)
model FeedbackComplaintCategory {
  id          String @id @default(cuid())
  complaintId String
  categoryId  String
  
  complaint   FeedbackComplaint @relation(fields: [complaintId], references: [id], onDelete: Cascade)
  category    FeedbackCategory  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  @@unique([complaintId, categoryId])
  @@map("FeedbackComplaintCategory")
  @@schema("airsense")
}
